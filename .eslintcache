[{"C:\\Users\\ezebr\\Desktop\\web\\aerolab-coding\\aeroshop\\src\\index.js":"1","C:\\Users\\ezebr\\Desktop\\web\\aerolab-coding\\aeroshop\\src\\App.js":"2","C:\\Users\\ezebr\\Desktop\\web\\aerolab-coding\\aeroshop\\src\\context\\userProvider.js":"3","C:\\Users\\ezebr\\Desktop\\web\\aerolab-coding\\aeroshop\\src\\components\\Header\\index.js":"4"},{"size":144,"mtime":1608580997510,"results":"5","hashOfConfig":"6"},{"size":215,"mtime":1608794123322,"results":"7","hashOfConfig":"6"},{"size":887,"mtime":1608792810855,"results":"8","hashOfConfig":"6"},{"size":958,"mtime":1608797656962,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1dh1qzy",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ezebr\\Desktop\\web\\aerolab-coding\\aeroshop\\src\\index.js",[],["20","21"],"C:\\Users\\ezebr\\Desktop\\web\\aerolab-coding\\aeroshop\\src\\App.js",[],"C:\\Users\\ezebr\\Desktop\\web\\aerolab-coding\\aeroshop\\src\\context\\userProvider.js",["22","23"],"import {createContext,useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default ({ children }) =>{\r\n    const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZmRiYmQ3MTI2ZjdkMjAwMjA0MTE0Y2YiLCJpYXQiOjE2MDgyMzY0MDF9.Sl8Cdihvsn-V8gQTDo2pooPS_jF2rFWXZPurX7ersHY';\r\n    \r\n    const [user,setUser] = useState('');\r\n\r\n    useEffect(async () => {\r\n        await axios.get('https://coding-challenge-api.aerolab.co/user/me', {\r\n            headers: {\r\n                'Authorization':`Bearer ${token}`\r\n            }\r\n        })\r\n        .then(res => {\r\n            setUser(res.data)\r\n        })\r\n        .catch(err => console.error(err))\r\n    }, [])\r\n\r\n    return (            \r\n            <UserContext.Provider value={[user, setUser]}>\r\n                {children}\r\n            </UserContext.Provider>  \r\n    );\r\n}\r\n\r\nexport const UserContext = createContext();","C:\\Users\\ezebr\\Desktop\\web\\aerolab-coding\\aeroshop\\src\\components\\Header\\index.js",["24","25","26","27"],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":4,"column":1,"nodeType":"34","endLine":26,"endColumn":2},{"ruleId":"35","severity":1,"message":"36","line":9,"column":15,"nodeType":"37","endLine":19,"endColumn":6},{"ruleId":"32","severity":1,"message":"38","line":9,"column":1,"nodeType":"34","endLine":29,"endColumn":2},{"ruleId":"39","severity":1,"message":"40","line":10,"column":18,"nodeType":"41","messageId":"42","endLine":10,"endColumn":25},{"ruleId":"43","severity":1,"message":"44","line":14,"column":13,"nodeType":"45","endLine":14,"endColumn":31},{"ruleId":"43","severity":1,"message":"44","line":23,"column":21,"nodeType":"45","endLine":23,"endColumn":66},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","Unexpected default export of anonymous function","no-unused-vars","'setUser' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]